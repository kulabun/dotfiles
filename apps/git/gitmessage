# ############### SUBJECT LINE ############### 
# Fix #12345: [core] [crash] segmentation fault  <NEWLINE>
# |<----  Using a Maximum Of 50 Characters  ---->|


# ############### COMMIT BODY ############### 
# Program crashed with segmentation fault every time user tried to 
# open tools window. 
# The cause of problem was using uninitialized pointer. <NEWLINE>
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|


# This closes #34, closes #23, and closes example_user/example_repo#42 <NEWLINE>
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|


# https://example.com/issues/12345 
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|


# --- COMMIT END ---
# 
# SUBJECT LINE
#
# Capitalized, short (50 chars or less) summary
#
# Type can be 
#    Feat     (new feature)
#    Fix      (bug fix)
#    Refactor (refactoring production code)
#    Style    (formatting, missing semi colons, etc; no code change)
#    Docs     (changes to documentation)
#    Test     (adding or refactoring tests; no production code change)
#    Chore    (updating grunt tasks etc; no production code change)
#
# COMMIT BODY
#
# More detailed explanatory text, if necessary.  Wrap it to about 72
# characters or so.  In some contexts, the first line is treated as the
# subject of an email and the rest of the text as the body.  The blank
# line separating the summary from the body is critical (unless you omit
# the body entirely); tools like rebase can get confused if you run the
# two together.
#
# Write your commit message in the imperative: “Fix bug” and not “Fixed bug”
# or “Fixes bug.”  This convention matches up with commit messages generated
# by commands like git merge and git revert.
#
# Further paragraphs come after blank lines.
#
# - Bullet points are okay, too
# - Typically a hyphen or asterisk is used for the bullet, followed by a
#   single space, with blank lines in between, but conventions vary here
# - Use a hanging indent
#
# --------------------
# Remember to
#    Capitalize the subject line
#    Use the imperative mood in the subject line
#    Do not end the subject line with a period
#    Separate subject from body with a blank line
#    Use the body to explain what and why vs. how
#    Can use multiple lines with "-" for bullet points in body
# --------------------
# 
# GitHub Keywords:
# The following keywords, followed by an issue number, will close the issue:
# - close
# - closes
# - closed
# - fix
# - fixes
# - fixed
# - resolve
# - resolves
# - resolved
