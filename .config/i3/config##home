set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SFNS Display 10

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Control+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu(rofi) (a program launcher)
bindsym $mod+Return exec rofi -modi drun -show drun -show-icons -me-select-entry '' -sidebar-mode
bindsym $mod+d exec rofi -modi drun -show drun -show-icons -me-select-entry '' -sidebar-mode
bindsym $mod+n exec $HOME/bin/networkmanager-dmenu

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+colon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+grave workspace $ws11

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+grave move container to workspace $ws11

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nabar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# Screenshot
bindsym Print exec --no-startup-id "scrot '%S.png' \
            -e 'mv $f $$(xdg-user-dir PICTURES)/Desktop-%S-$wx$h.png \
            ; gpicview $$(xdg-user-dir PICTURES)/Desktop-%S-$wx$h.png'"

# audio
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous
bindsym XF86AudioStop exec --no-startup-id playerctl stop
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer -i 2
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer -d 2
bindsym XF86AudioMute exec --no-startup-id pamixer -t

# screen lock
bindsym $mod+Control+l exec --no-startup-id i3lock -i ~/Wallpapers/224527.png  -e

# backlight
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 10
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 10


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Monitors
set $mon1 HDMI1
set $mon2 HDMI2

# Autostart
exec_always --no-startup-id $HOME/bin/polybar-launch
#exec_always --no-startup-id nitrogen --random --set-scaled
exec_always --no-startup-id nitrogen --set-scaled "$HOME/Wallpapers/224542.jpg"
exec_always --no-startup-id xrdb -load ~/.Xresources

exec --no-startup-id xfsettingsd
exec --no-startup-id compton
exec google-chrome-stable 
exec google-chrome-stable --app="https://devdocs.io"
exec google-chrome-stable --app="https://music.amazon.com"
exec google-chrome-stable --app="https://gmail.com"
exec google-chrome-stable --app="https://todoist.com"
exec alacritty --class "system-term"
#exec --no-startup-id 

# Applications

for_window [class="(?i)(?:thunar|ranger|code|jetbrains-idea)"] focus
for_window [class="(?i)(?:thunar|ranger|code|jetbrains-idea|chrome|firefox)"] border pixel 1

# Assign Applications to specific workspace
# get class with xprop
assign [class="Alacritty" instance="system-term"] $ws11
assign [class="code"] $ws2
assign [class="jetbrains-idea"] $ws2
assign [instance="gmail.com"] $ws9
assign [instance="music.amazon.com"] $ws10
assign [instance="devdocs.io"] $ws4
assign [instance="todoist.com"] $ws8
assign [class="Google-chrome"] $ws1

# focus, floating, & sticky
for_window [title="(?i)(?:copying|deleting|moving)"] floating enable
for_window [window_role="(?i)(?:pop-up|setup)"] floating enable
for_window [class="(?i)(?:peek)"] floating enable

# set trayer to be borderless
for_window [class="(?i)trayer"] border pixel 0

# Fix for chrome applications (have role = popup)
for_window [class="Google-chrome"] floating disable
