#!/bin/bash

unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset AWS_SESSION_TOKEN

[ -z "$AWS_PROFILE" ] || AWS_PROFILE="default"

function get-user-name() {
	aws sts get-caller-identity | jq -r '.Arn | split("/")[1]'
}

function get-mfa-serial-number() {
	userName="$1"
	aws iam list-mfa-devices --user-name "$userName" --profile "$AWS_PROFILE" | jq -r '.MFADevices[0].SerialNumber'
}

function get-session-token() {
	serialNumber="$1"
	tokenCode="$2"
	response=$(aws sts get-session-token --serial-number "$serialNumber" --token-code "$tokenCode" --profile "$AWS_PROFILE")
	AWS_ACCESS_KEY_ID=$(echo "$response" | jq -r '.Credentials.AccessKeyId')
	AWS_SECRET_ACCESS_KEY=$(echo "$response" | jq -r '.Credentials.SecretAccessKey')
	AWS_SESSION_TOKEN=$(echo "$response" | jq -r '.Credentials.SessionToken')
	echo -e "\
export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\n\
export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\n\
export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
}


userName=$(get-user-name)
tokenCode="$1"

if [ -z "$tokenCode" ]; then
	echo "Please provide token-code as an argument"
	exit 1;
fi

serialNumber=$(get-mfa-serial-number "$userName")
if [ "$?" -ne 0 ]; then
	exit 1;
fi

eval $(get-session-token "$serialNumber" "$tokenCode")
